---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

// Get all work experience entries
const workEntries = await getCollection('work');

// Sort by start date (most recent first)
const sortedWork = workEntries.sort((a: CollectionEntry<'work'>, b: CollectionEntry<'work'>) => {
  const dateA = new Date(a.data.startDate);
  const dateB = new Date(b.data.startDate);
  return dateB.getTime() - dateA.getTime();
});

// Helper function to format dates
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', { 
    year: 'numeric', 
    month: 'long' 
  });
}

// Helper function to format date range
function formatDateRange(startDate: string, endDate?: string, current?: boolean): string {
  const start = formatDate(startDate);
  if (current) {
    return `${start} - Present`;
  }
  if (endDate) {
    const end = formatDate(endDate);
    return `${start} - ${end}`;
  }
  return start;
}
---

<Layout 
	title="Work Experience" 
	description="Professional experience in software engineering, platform engineering, and developer tooling."
>
	<div class="min-h-screen flex flex-col">
		<Header />
		
		<main class="flex-1">
			<div class="max-w-4xl mx-auto px-4 py-8 sm:px-6 lg:px-8">
				<!-- Page Header -->
				<header class="mb-12">
					<h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
						Work Experience
					</h1>
					<p class="text-xl text-gray-600 dark:text-gray-300">
						My professional journey in software engineering and platform development.
					</p>
				</header>
				
				<!-- Work Experience List -->
				<div class="space-y-16">
					{sortedWork.map((entry: CollectionEntry<'work'>) => (
						<article class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-10 border border-gray-200 dark:border-gray-700">
							<!-- Header -->
							<header class="mb-8">
								<div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6">
									<div>
										<h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
											{entry.data.title}
										</h2>
										<div class="flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4 text-gray-600 dark:text-gray-300">
											<span class="font-medium">{entry.data.company}</span>
											<span class="hidden sm:inline">â€¢</span>
											<span>{entry.data.location}</span>
										</div>
									</div>
									<div class="text-sm text-gray-500 dark:text-gray-400 mt-2 sm:mt-0">
										{formatDateRange(entry.data.startDate, entry.data.endDate, entry.data.current)}
									</div>
								</div>
								
								{entry.data.url && (
									<a 
										href={entry.data.url}
										target="_blank"
										rel="noopener noreferrer"
										class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 text-sm font-medium transition-colors"
									>
										Visit Company
										<svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
										</svg>
									</a>
								)}
							</header>
							
							<!-- Description -->
							<div class="mb-8">
								<p class="text-gray-700 dark:text-gray-300 leading-relaxed">
									{entry.data.description}
								</p>
							</div>
							
							<!-- Highlights -->
							<div class="mb-8">
								<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">
									Key Achievements
								</h3>
								<ul class="space-y-3">
									{entry.data.highlights.map((highlight: string) => (
										<li class="flex items-start">
											<svg class="w-5 h-5 text-green-500 mt-0.5 mr-3 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
												<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
											</svg>
											<span class="text-gray-700 dark:text-gray-300">{highlight}</span>
										</li>
									))}
								</ul>
							</div>
							
							<!-- Technologies -->
							{entry.data.technologies && entry.data.technologies.length > 0 && (
								<div>
									<h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">
										Technologies
									</h3>
									<div class="flex flex-wrap gap-2">
										{entry.data.technologies.map((tech: string) => (
											<span class="inline-block px-3 py-1 text-sm font-medium text-blue-600 bg-blue-100 dark:bg-blue-900/20 dark:text-blue-400 rounded-full">
												{tech}
											</span>
										))}
									</div>
								</div>
							)}
						</article>
					))}
				</div>
				
				<!-- Empty State -->
				{sortedWork.length === 0 && (
					<div class="text-center py-12">
						<div class="text-gray-400 dark:text-gray-500 mb-4">
							<svg class="mx-auto h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m8 0V6a2 2 0 012 2v6a2 2 0 01-2 2H8a2 2 0 01-2-2V8a2 2 0 012-2V6" />
							</svg>
						</div>
						<h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">
							No work experience yet
						</h3>
						<p class="text-gray-500 dark:text-gray-400">
							Work experience entries will appear here.
						</p>
					</div>
				)}
			</div>
		</main>
		
		<Footer />
	</div>
</Layout> 