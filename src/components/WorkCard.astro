---
import type { CollectionEntry } from 'astro:content';
import { displayMonthYearRange } from '../utils/date';
import { Briefcase, SquareCode, ExternalLink } from '@lucide/astro';
import { makeAnchor } from '../utils/work';

interface Props {
  entry: CollectionEntry<'work'>;
  index: number;
}

const { entry, index } = Astro.props;
---

<article 
  class="timeline-tracker-card bg-white dark:bg-gray-800 rounded-lg shadow-md p-8 border border-gray-200 dark:border-gray-700 transition-all duration-300"
  data-timeline-index={index}
  data-timeline-type={entry.data.type}
  data-timeline-anchor={makeAnchor(entry)}
  id={`entry-${index}`}
>
  <!-- Header -->
  <header class="mb-8">

    <!-- Meta section with layout information. JSON dump of the card's data -->
    <div class="hidden">
      <!-- A label -->
      <div class="text-sm text-gray-500 dark:text-gray-400 mb-2">
        Meta <pre class="meta-info text-xs text-gray-500 dark:text-gray-400">{JSON.stringify({}, null, 2)}</pre>
      </div>
      
    </div>

    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6">
      <div class="flex items-center gap-4">
        <!-- Icon based on type -->
        <div class="flex-shrink-0 mt-1">
          {entry.data.type === 'employment' ? (
            <Briefcase class="w-12 h-12 text-blue-600 dark:text-blue-400" />
          ) : (
            <SquareCode class="w-12 h-12 text-purple-600 dark:text-purple-400" />
          )}
        </div>
        
        <div>
          <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
            {entry.data.type === 'employment' ? entry.data.title : entry.data.projectName}
          </h3>
          <div class="flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4 text-gray-600 dark:text-gray-300">
            <span class="font-medium">
              {entry.data.type === 'employment' ? entry.data.company : entry.data.title}
            </span>
            {entry.data.location && (
              <>
                <span class="hidden sm:inline">â€¢</span>
                <span>{entry.data.location}</span>
              </>
            )}
          </div>
        </div>
      </div>
      <div class="text-sm text-gray-500 dark:text-gray-400 mt-2 sm:mt-0">
        {displayMonthYearRange(entry.data.startDate, entry.data.endDate, entry.data.current)}
      </div>
    </div>
    
    <!-- Links section -->
    <div class="flex gap-4">
      {entry.data.type === 'employment' && entry.data.url && (
        <a 
          href={entry.data.url}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 text-sm font-medium transition-colors"
        >
          Visit Company
          <ExternalLink class="w-4 h-4 ml-1" />
        </a>
      )}
      {entry.data.type === 'project' && entry.data.githubUrl && (
        <a 
          href={entry.data.githubUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 text-sm font-medium transition-colors"
        >
          View on GitHub
          <ExternalLink class="w-4 h-4 ml-1" />
        </a>
      )}
      {entry.data.type === 'project' && entry.data.liveUrl && (
        <a 
          href={entry.data.liveUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center text-green-600 dark:text-green-400 hover:text-green-700 dark:hover:text-green-300 text-sm font-medium transition-colors"
        >
          Live Demo
          <ExternalLink class="w-4 h-4 ml-1" />
        </a>
      )}
    </div>
  </header>
  
  <!-- Description -->
  <div class="mb-8">
    <p class="text-gray-700 dark:text-gray-300 leading-relaxed">
      {entry.data.description}
    </p>
  </div>
  
  <!-- Highlights -->
  <div class="mb-8">
    <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">
      {entry.data.type === 'employment' ? 'Key Achievements' : 'Key Features'}
    </h4>
    <ul class="space-y-3">
      {entry.data.highlights.map((highlight: string) => (
        <li class="flex items-start">
          <svg class="w-5 h-5 text-green-500 mt-0.5 mr-3 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
          <span class="text-gray-700 dark:text-gray-300">{highlight}</span>
        </li>
      ))}
    </ul>
  </div>
  
  <!-- Technologies -->
  {entry.data.technologies && entry.data.technologies.length > 0 && (
    <div>
      <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">
        Technologies
      </h4>
      <div class="flex flex-wrap gap-2">
        {entry.data.technologies.map((tech: any) => {
          const techName = typeof tech === 'string' ? tech : tech.name;
          const techDescription = typeof tech === 'string' ? null : tech.description;
          
          return (
            <div class="relative group">
              <span class={`inline-block px-3 py-1 text-xs font-medium rounded-full cursor-default ${
                entry.data.type === 'employment' 
                  ? 'text-blue-600 bg-blue-100 dark:bg-blue-900/20 dark:text-blue-400'
                  : 'text-purple-600 bg-purple-100 dark:bg-purple-900/20 dark:text-purple-400'
              }`}>
                {techName}
              </span>
                {techDescription && (
                 <div class="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 text-xs rounded-lg shadow-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none z-10 w-80">
                   <div class="text-center leading-relaxed">{techDescription}</div>
                   <div class="absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900 dark:border-t-gray-100"></div>
                 </div>
               )}
            </div>
          );
        })}
      </div>
    </div>
  )}
</article> 