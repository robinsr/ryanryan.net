---
import type { CollectionEntry } from 'astro:content';
import { makeAnchor } from '../utils/work';

interface Props {
  entries: CollectionEntry<'work'>[];
}

const { entries } = Astro.props;
---

<!-- Timeline Bar Container -->
<div class="relative w-56 h-96">
  
  <!-- Bottom Layer: Background Bar with Progress -->
  <div class="absolute left-0 top-0 w-1 h-full bg-gray-200 dark:bg-gray-700 rounded-full" style="transform: scale(0.95) translate(0px, -7px);">
    <!-- Timeline Progress Indicator -->
    <div 
      id="timeline-progress" 
      class="w-1 bg-gradient-to-b from-blue-500 to-purple-500 rounded-full transition-all duration-300" 
      style="height: 0%;"
      >
    </div>
  </div>
  
  <!-- Top Layer: Timeline Items -->
  <div class="absolute left-0 top-0 w-full h-full">
    {entries.map((entry, index) => (
      <div 
        class="timeline-item absolute top-20 flex flex-row items-center justify-center"
        style={`
          top: ${(index / (entries.length - 1)) * 95}%;
          transform: translateY(-50%);
        `}
        data-timeline-index={index}
        data-timeline-type={entry.data.type}
        data-timeline-anchor={makeAnchor(entry)}
      >
        <!-- Timeline Marker -->
        <div 
          class="timeline-marker transform -translate-x-1/2 w-3 h-3 rounded-full border-2 border-white dark:border-gray-800 shadow-sm transition-all duration-300 bg-gray-400 dark:bg-gray-500"
          style="transform: translate(12%);"
        ></div>
        
        <!-- Timeline Label -->
        <div class="timeline-label text-sm font-medium transition-all duration-300 whitespace-nowrap">
          <span class="timeline-label-text text-gray-400 dark:text-gray-500">
            {entry.data.type === 'employment' ? entry.data.title : entry.data.projectName}
          </span>
        </div>
      </div>
    ))}
  </div>
</div> 