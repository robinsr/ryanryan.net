---
import { formatDateLong } from '../utils/date';
import Tag from './Tag.astro';

export interface Props {
	title: string;
	description?: string;
	pubDate: Date;
	url: string;
	category?: string;
	tags?: string[];
	image?: string;
}

const { title, description, pubDate, url, category, tags = [], image } = Astro.props;
const formattedDate = formatDateLong(pubDate);
---

<article class="bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden">
	{image && (
		<div class="aspect-video overflow-hidden">
			<img 
				src={image} 
				alt={title}
				class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
			/>
		</div>
	)}
	
	<div class="p-6">
		<div class="flex items-center gap-2 mb-3">
			{category && (
				<Tag tag={category} type="category" href={`/category/${category.toLowerCase()}`} />
			)}
			<time datetime={pubDate.toISOString()} class="text-sm text-gray-500 dark:text-gray-400">
				{formattedDate}
			</time>
		</div>
		
		<h2 class="text-xl font-bold text-gray-900 dark:text-white mb-3 line-clamp-2">
			<a href={url} class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
				{title}
			</a>
		</h2>
		
		{description && (
			<p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
				{description}
			</p>
		)}
		
		{tags.length > 0 && (
			<div class="flex flex-wrap gap-1 mb-4">
				{tags.slice(0, 3).map(tag => (
					<Tag tag={tag} href={`/tag/${tag.toLowerCase()}`}/>
				))}
				{tags.length > 3 && (
					<span class="text-xs text-gray-500 dark:text-gray-400 px-2 py-1">
						+{tags.length - 3} more
					</span>
				)}
			</div>
		)}
		
		<a 
			href={url}
			class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium text-sm transition-colors"
		>
			Read more
			<svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
			</svg>
		</a>
	</div>
</article>

<style>
	.line-clamp-2 {
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
	
	.line-clamp-3 {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
</style> 