---
export interface Props {
	code: string;
	lang?: string;
	filename?: string;
}

const { code, lang = 'text', filename } = Astro.props;
---

<div class="relative group">
	{filename && (
		<div class="bg-gray-800 text-gray-300 px-4 py-2 text-sm font-mono border-b border-gray-700 rounded-t-lg">
			{filename}
		</div>
	)}
	<div class={`relative ${filename ? 'rounded-b-lg' : 'rounded-lg'} overflow-hidden`}>
		<pre class={`${filename ? '' : 'rounded-lg'} bg-gray-900 text-gray-100 p-4 overflow-x-auto font-mono`}>
			<code class={`language-${lang}`}>{code}</code>
		</pre>
		<button
			class="absolute top-2 right-2 p-2 text-gray-400 hover:text-white bg-gray-800 hover:bg-gray-700 rounded transition-colors opacity-0 group-hover:opacity-100"
			onclick={`navigator.clipboard.writeText(\`${code.replace(/`/g, '\\`')}\`)`}
			aria-label="Copy code"
		>
			<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
			</svg>
		</button>
	</div>
</div> 