---
import type { PostMeta } from '@/content/config';

import '@/styles/global.css';

import ArticleMeta from '@/components/article/ArticleMeta.astro';
import { ClientRouter } from "astro:transitions";
import { SITE_CONFIG } from '@/constants';

export interface Props {
	title: string;
	description?: string;
	image?: string;
	post?: PostMeta;
}

const {
	title = "",
	description = SITE_CONFIG.tagline,
	image,
	post
} = Astro.props;

const canonical = Astro.url;

const fullTitle = [ title, SITE_CONFIG.title ].filter(Boolean).join(' - ');
---

<!doctype html>
<html lang="en" class="scroll-smooth dark" transition:name="root" transition:animate="none" data-theme="auto">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)" />
    <meta name="theme-color" content="#000000" media="(prefers-color-scheme: dark)" />
    <meta name="color-scheme" content="light dark" />

		<link rel="sitemap" href="/sitemap-index.xml" />

		<!-- SEO -->
		<title>{fullTitle}</title>
		<meta name="description" content={description} />
		<link rel="canonical" href={canonical} />

		{post && <ArticleMeta post={post} />}

		<!-- Fonts -->
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Overpass+Mono:wght@400;500;600&display=swap" rel="stylesheet">

		<!-- Theme initialization script to prevent FOUC -->
		<script is:inline>
			(function() {
				function getInitialTheme() {
					const saved = localStorage.getItem('theme-preference');
					if (saved) {
						try {
							const data = JSON.parse(saved);
							const now = Date.now();
							// Check if preference has expired (12 hours = 43200000 ms)
							if (now - data.timestamp > 43200000) {
								localStorage.removeItem('theme-preference');
								return null;
							}
							return data.theme;
						} catch {
							localStorage.removeItem('theme-preference');
							return null;
						}
					}
					return null;
				}

				const theme = getInitialTheme();
				const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

				if (theme === 'dark' || (theme === 'auto' && systemPrefersDark)) {
					document.documentElement.classList.add('dark');
				} else {
					document.documentElement.classList.remove('dark');
				}
			})();
		</script>

    <ClientRouter />
  </head>

  <body class="bg-white text-gray-900 dark:bg-gray-900 dark:text-gray-100 font-sans antialiased min-w-[320px]">
		<slot />
	</body>
</html>

<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), rgb(var(--accent-light)) 30%, white 60%);
	}

	html {
		font-family: 'Inter', system-ui, sans-serif;
		min-height: 100vh;
	}

	body {
		min-height: 100vh;
	}

	code {
		font-family: 'Overpass Mono', Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
	}
</style>
