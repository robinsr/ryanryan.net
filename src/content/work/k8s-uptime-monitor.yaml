type: "project"
projectName: "Uptime Monitor"
title: "Go Developer & Kubernetes Operator"
startDate: "2025-07"
current: true
description: "A comprehensive uptime monitoring service built in Go with Kubernetes operator capabilities. The project demonstrates advanced Go programming, Kubernetes custom resource definitions (CRDs), controller patterns, and Prometheus metrics integration. It provides both a standalone monitoring service and a full Kubernetes operator for managing uptime checks as native Kubernetes resources."
highlights:
  - "Built a lightweight uptime monitoring service in Go with configurable HTTP endpoint checking and response time tracking"
  - "Implemented Prometheus metrics integration for comprehensive observability including uptime status, response durations, and failure counts"
  - "Designed and implemented a Kubernetes operator using controller-runtime framework with custom resource definitions (CRDs)"
  - "Created a custom UptimeCheck resource type with validation, status tracking, and declarative configuration management"
  - "Developed a reconciliation loop that manages CronJob resources to execute uptime checks at specified intervals"
  - "Implemented proper Kubernetes RBAC permissions and resource lifecycle management for production deployment"
  - "Built a modular architecture with separate packages for monitoring logic, API server, configuration management, and controllers"
  - "Provided both standalone deployment and Kubernetes-native deployment options with comprehensive YAML manifests"
technologies:
  - "Go"
  - "Kubernetes"
  - "Custom Resource Definitions (CRDs)"
  - "Controller Runtime"
  - "Prometheus Metrics"
  - "YAML Configuration"
  - "HTTP Client"
  - "CronJob Management"
  - "RBAC"
  - "Kubernetes Operator Pattern"
  - "Reconciliation Loops"
  - "Status Management"
githubUrl: "https://github.com/robinsr/k8s-uptime-monitor-service"